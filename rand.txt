import os
import xml.etree.ElementTree as ET

def process_xml_files(folder_path):
    xml_files = [f for f in os.listdir(folder_path) if f.endswith('.xml')]

    for file_name in xml_files:
        file_path = os.path.join(folder_path, file_name)
        try:
            tree = ET.parse(file_path)
            root = tree.getroot()

            # Handle namespaces dynamically
            namespaces = {k: v for event, elem in ET.iterparse(file_path, events=['start-ns']) for k, v in [elem]}
            sheet_protection_tag = f"{{{list(namespaces.values())[0]}}}sheetProtection" if namespaces else "sheetProtection"

            # Look for <sheetProtection> with or without namespaces
            sheet_protection = root.find(sheet_protection_tag)
            if sheet_protection is not None:
                root.remove(sheet_protection)
                tree.write(file_path, encoding="utf-8", xml_declaration=True)
                print(f"Removed <sheetProtection> from {file_name}")
            else:
                print(f"No <sheetProtection> node found in {file_name}")
        except ET.ParseError as e:
            print(f"Error parsing {file_name}: {e}")
        except Exception as e:
            print(f"Unexpected error with {file_name}: {e}")

if __name__ == "__main__":
    folder_path = input("Enter the path to the folder containing the XML files: ").strip()
    if os.path.exists(folder_path) and os.path.isdir(folder_path):
        process_xml_files(folder_path)
    else:
        print("Invalid folder path.")
